<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ReportEvcn.Api</name>
    </assembly>
    <members>
        <member name="M:ReportEvcn.Api.Controllers.AuthController.Register(ReportEvcn.Domain.Dto.User.RegisterUserDTO)">
            <summary>
            Регистрация пользователя
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.AuthController.Login(ReportEvcn.Domain.Dto.User.LoginUserDTO)">
            <summary>
            Логин пользователя
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.ReportController.GetUserReports(System.Int64)">
            <summary>
            Получение отчётов пользователя
            </summary>
            <param name="userId"></param>
            <remarks>
            Sample request:
             
                GET
                {
                    "userId": "1"
                }
            </remarks>
            <response code="200">Если отчёты были получены</response>
            <response code="400">Если отчёты не были получены</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.ReportController.GetReport(System.Int64)">
            <summary>
            Получение отчётов с указанием идентификатора
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request:
             
                GET
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Если отчёт был получен</response>
            <response code="400">Если отчёт не был получен</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.ReportController.DeleteReport(System.Int64)">
            <summary>
            Удаление отчёта с указанием идентификатора
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request:
             
                DELETE
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Если отчёт удалился</response>
            <response code="400">Если отчёт не был удалён</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.ReportController.CreateReport(ReportEvcn.Domain.Dto.Report.CreateReportDTO)">
            <summary>
            Создание отчёта
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
             
                POST
                {
                    "name": "Report1",
                    "description": "Test report",
                    "userId": "1"
                }
            </remarks>
            <response code="200">Если отчёт создался</response>
            <response code="400">Если отчёт не был создан</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.ReportController.UpdateReport(ReportEvcn.Domain.Dto.Report.UpdateReportDTO)">
            <summary>
            Обновление отчёта с указанием основных свойств
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
             
                PUT
                {
                    "id": "1"  
                    "name": "Report2",
                    "description": "Test report2",
                }
            </remarks>
            <response code="200">Если отчёт обновился</response>
            <response code="400">Если отчёт не обновился</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.RoleController.Create(ReportEvcn.Domain.Dto.Role.CreateRoleDTO)">
            <summary>
            Создание роли
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
             
                POST
                {
                    "name": "Admin"
                }
            </remarks>
            <response code="200">Если отчёт создался</response>
            <response code="400">Если отчёт не был создан</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.RoleController.Delete(System.Int64)">
            <summary>
            Удаление роли с указанием идентификатора
            </summary>
            <param name="id"></param>
            <remarks>
            Sample request:
             
                DELETE
                {
                    "id": "1"
                }
            </remarks>
            <response code="200">Если роль удалилась</response>
            <response code="400">Если роль не была удалена</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.RoleController.Update(ReportEvcn.Domain.Dto.Role.UpdateRoleDTO)">
            <summary>
            Обновление роли с указанием основных свойств
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
             
                PUT
                {
                    "id": "1"  
                    "name": "Admin"
                }
            </remarks>
            <response code="200">Если роль обновилась</response>
            <response code="400">Если роль не обновилась</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.RoleController.AddRoleForUser(ReportEvcn.Domain.Dto.UserRole.UserRoleDTO)">
            <summary>
            Добавление роли пользователю
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
             
                POST
                {
                    "Login": "User1"
                    "RoleId": "3"
                }
            </remarks>
            <response code="200">Если роль была добавлена пользователю</response>
            <response code="400">Если роль не была добавлена пользователю</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.RoleController.DeleteRoleForUser(ReportEvcn.Domain.Dto.UserRole.DeleteUserRoleDTO)">
            <summary>
            Удалена роли у пользователю
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
             
                DELETE
                {
                    "Login": "User1"
                    "RoleName": "Admin"
                }
            </remarks>
            <response code="200">Если роль у пользователя была удалена</response>
            <response code="400">Если роль у пользователя не была удалена</response>
        </member>
        <member name="M:ReportEvcn.Api.Controllers.RoleController.UpdateRoleForUser(ReportEvcn.Domain.Dto.UserRole.UpdateUserRoleDTO)">
            <summary>
            Обновление роли у пользователю
            </summary>
            <param name="dto"></param>
            <remarks>
            Sample request:
            
                PUT
                {
                    "Login": "User1"
                    "OldRoleId": "2"
                    "NewRoleId": "3"
                }
            </remarks>
            <response code="200">Если роль у пользователя была обновлена</response>
            <response code="400">Если роль у пользователя не была обновлена</response>
        </member>
        <member name="M:ReportEvcn.Api.Startup.AddAuthenticationAndAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Подключение аутентификации и авторизации
            </summary>
        </member>
        <member name="M:ReportEvcn.Api.Startup.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Подключение Swagger
            </summary>
        </member>
    </members>
</doc>
